{"version":3,"file":"static/js/576.6c6bc1bf.chunk.js","mappings":"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","sources":["redux/Products/ProductSelectors.js","Components/ProductList/ProductList.styled.js","Components/Modal/Modal.styled.js","Components/Modal/Modal.jsx","Components/ConfirmationButton/ConfirmationButton.styled.js","Components/ConfirmationButton/ConfirmationButton.jsx","Components/ConfirmDeletProduct/ConfirmDeleteProduct.styled.js","Components/ConfirmDeletProduct/ConfirmDeleteProduct.jsx","Components/ProductItem/ProductItem.styled.js","Components/ProductItem/ProductItem.jsx","Components/ProductList/ProductsList.jsx","Components/CreateProductForm/CreateProductData.js","Components/CreateProductForm/CreatePfoductForm.styled.js","Components/FormInput/FormInput.styled.js","Components/FormInput/FormInput.jsx","Components/CreateProductForm/CreateProductFoem.jsx","helpers/filtrData.js","Components/CreatProdutBtn/CreateBtn.styled.js","Components/CreatProdutBtn/CreateProductBtn.jsx","Pages/ListPage/ListPage.styled.js","Pages/ListPage/ListPage.jsx"],"sourcesContent":["export const data = (state) => state.products.data;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ListWrapper = styled.ul`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  padding-left: 29px;\r\n  padding-right: 29px;\r\n  padding-bottom: 100px;\r\n  padding-top: 50px;\r\n  gap: 50px 29px;\r\n  width: 100%;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 10000000000000;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nexport const ModalWindow = styled.div`\r\n  width: 400px;\r\n\r\n  position: absolute;\r\n  top: 5%;\r\n  left: 50%;\r\n\r\n  transform: translateX(-50%);\r\n  border-radius: 8px;\r\n  background-color: #ffffff;\r\n\r\n  z-index: 3;\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n  wodth: 100%;\r\n  text-align: left;\r\n  padding: ${({ theme }) => theme.space[4] + 'px'};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grey};\r\n`;\r\n\r\nexport const ModalTitle = styled.h3`\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const CloseModalBtn = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: absolute;\r\n  background-color: transparent;\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  top: 10px;\r\n  right: 10px;\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  padding: 20px;\r\n`;\r\n","import { createPortal } from 'react-dom';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport {\r\n  Backdrop,\r\n  ModalWindow,\r\n  CloseModalBtn,\r\n  ModalHeader,\r\n  ModalContent,\r\n  ModalTitle,\r\n} from './Modal.styled';\r\n\r\nimport { FiX } from 'react-icons/fi';\r\n\r\nconst modalContainer = document.getElementById('modal-root');\r\n\r\nexport default function PopupWindow({\r\n  closeModal,\r\n  title,\r\n  children,\r\n  isModalOpen,\r\n}) {\r\n  const nodeRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.code === 'Escape') {\r\n        closeModal();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [closeModal]);\r\n\r\n  const handleClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <CSSTransition\r\n      in={isModalOpen}\r\n      nodeRef={nodeRef}\r\n      timeout={10000}\r\n      classNames=\"modal\"\r\n      unmountOnExit\r\n    >\r\n      <Backdrop onClick={handleClick} ref={nodeRef}>\r\n        <ModalWindow>\r\n          <ModalHeader>\r\n            <ModalTitle>{title}</ModalTitle>\r\n          </ModalHeader>\r\n          <CloseModalBtn onClick={closeModal}>\r\n            <FiX size={24} style={{ color: '#000' }} />\r\n          </CloseModalBtn>\r\n          <ModalContent>{children}</ModalContent>\r\n        </ModalWindow>\r\n      </Backdrop>\r\n    </CSSTransition>,\r\n    modalContainer\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ConfirmationButton = styled.button`\r\n  display: block;\r\n  padding: ${({ theme }) => theme.space[3] + 'px'}\r\n    ${({ theme }) => theme.space[4] + 'px'};\r\n  border-radius: ${({ theme }) => theme.space[2] + 'px'};\r\n\r\n  color: ${({ theme }) => theme.colors.maimWhite};\r\n  font-size: ${({ theme }) => theme.fontSizes[3] + 'px'};\r\n\r\n  background-color: ${({ theme }) => theme.colors.blue};\r\n\r\n  transition: background 0.5s ease-in-out;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.hoverBlue};\r\n  }\r\n`;\r\n","import { ConfirmationButton } from './ConfirmationButton.styled';\r\n\r\nexport const Button = ({ type, handleClick, text }) => {\r\n  return (\r\n    <ConfirmationButton type={type} onClick={handleClick}>\r\n      {text}\r\n    </ConfirmationButton>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 200px;\r\n  gap: 20px;\r\n`;\r\n","import { Button } from '../ConfirmationButton/ConfirmationButton';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteProduct } from '../../redux/Products/ProductsOperation';\r\n\r\nimport { ButtonWrapper } from './ConfirmDeleteProduct.styled';\r\nexport const ConfirmDelete = ({ id, closeModal }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = async () => {\r\n    await dispatch(deleteProduct(id));\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Are you sure you want to remove the product?</h3>\r\n      <ButtonWrapper>\r\n        <Button type={'button'} text={'Yes'} handleClick={handleDelete} />\r\n        <Button type={'button'} text={'Cancel'} handleClick={closeModal} />\r\n      </ButtonWrapper>\r\n    </div>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const ItemWrapper = styled.li`\r\n  width: 274px;\r\n  position: relative;\r\n\r\n  & img {\r\n    width: 274;\r\n    height: 268px;\r\n    object-fit: cover;\r\n    object-position: center;\r\n    border-radius: 14px;\r\n  }\r\n`;\r\n\r\nexport const ItemtitleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-top: 14px;\r\n`;\r\n\r\nexport const Itemtitle = styled.h3`\r\n  &:first-of-type {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  font-size: ${({ theme }) => theme.fontSizes[2]};\r\n  line-height: ${({ theme }) => theme.fontSizes[5]};\r\n  font-weight: 500;\r\n  color: ${({ theme }) => theme.colors.black};\r\n\r\n  & span {\r\n    color: ${({ theme }) => theme.colors.blue};\r\n  }\r\n`;\r\n\r\nexport const DescrWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  padding-top: 8px;\r\n  padding-bottom: 28px;\r\n`;\r\n\r\nexport const Descr = styled.p`\r\n  font-size: ${({ theme }) => theme.fontSizes[0]};\r\n  line-height: ${({ theme }) => theme.fontSizes[3]};\r\n  font-weight: 400;\r\n  color: ${({ theme }) => theme.colors.grey};\r\n  text-align: left;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  height: 37px;\r\n`;\r\n\r\nexport const LearnMoreBtn = styled(NavLink)`\r\n  display: block;\r\n  width: 100%;\r\n  font-size: ${({ theme }) => theme.fontSizes[1]};\r\n  line-height: ${({ theme }) => theme.fontSizes[4]};\r\n  background-color: ${({ theme }) => theme.colors.blue};\r\n  text-align: center;\r\n  font-weight: 600;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  border-radius: 12px;\r\n  transition: background-color 0.5s ease-in-out;\r\n  color: ${({ theme }) => theme.colors.maimWhite};\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.colors.lightBlue};\r\n  }\r\n`;\r\n\r\nexport const DltBtn = styled(NavLink)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: absolute;\r\n  background-color: transparent;\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  top: 5px;\r\n  right: 5px;\r\n  background-color: ${({ theme }) => theme.colors.grey};\r\n  transition: background-color 0.5s ease-in-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.colors.red};\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport PopupWindow from '../Modal/Modal';\r\nimport { ConfirmDelete } from '../ConfirmDeletProduct/ConfirmDeleteProduct';\r\n\r\nimport {\r\n  ItemWrapper,\r\n  ItemtitleWrapper,\r\n  Itemtitle,\r\n  LearnMoreBtn,\r\n  DltBtn,\r\n} from './ProductItem.styled';\r\n\r\nimport { FiTrash2 } from 'react-icons/fi';\r\n\r\nexport const Product = ({ data }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const location = useLocation();\r\n\r\n  const handleOpenMpdal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <ItemWrapper>\r\n      <DltBtn type=\"button\" onClick={handleOpenMpdal}>\r\n        <FiTrash2 size={24} style={{ color: '#000' }} />\r\n      </DltBtn>\r\n      <img src={data.imageUrl} alt=\"product\" />\r\n      <ItemtitleWrapper>\r\n        <Itemtitle>{data.name}</Itemtitle>\r\n        <Itemtitle>count: {data.count}</Itemtitle>\r\n      </ItemtitleWrapper>\r\n      <LearnMoreBtn to={`/${data.id}`} state={{ from: location }}>\r\n        Learn more\r\n      </LearnMoreBtn>\r\n      {isModalOpen && (\r\n        <PopupWindow\r\n          closeModal={closeModal}\r\n          title={'Delete Item'}\r\n          isModalOpen={isModalOpen}\r\n        >\r\n          <ConfirmDelete id={data.id} closeModal={closeModal} />\r\n        </PopupWindow>\r\n      )}\r\n    </ItemWrapper>\r\n  );\r\n};\r\n","import { ListWrapper } from './ProductList.styled';\r\n\r\nimport { Product } from '../ProductItem/ProductItem';\r\n\r\nexport const ProductList = ({ data }) => {\r\n  console.log(data);\r\n  return (\r\n    <div>\r\n      <ListWrapper>\r\n        {data.map((dataItem) => (\r\n          <Product key={data.id + Math.random().toString()} data={dataItem} />\r\n        ))}\r\n      </ListWrapper>\r\n    </div>\r\n  );\r\n};\r\n","import * as Yup from 'yup';\r\n\r\nexport const createProductInitialValue = [\r\n  {\r\n    title: 'Name',\r\n    name: 'name',\r\n    type: 'text',\r\n  },\r\n  {\r\n    title: 'Count',\r\n    name: 'count',\r\n    type: 'number',\r\n  },\r\n  {\r\n    title: 'Weight',\r\n    name: 'weight',\r\n    type: 'number',\r\n  },\r\n  {\r\n    title: 'Width',\r\n    name: 'width',\r\n    type: 'number',\r\n  },\r\n  {\r\n    title: 'Height',\r\n    name: 'height',\r\n    type: 'number',\r\n  },\r\n];\r\n\r\nexport const ValidateSchema = Yup.object().shape({\r\n  count: Yup.number()\r\n    .typeError('Must be a number')\r\n    .required('Field is required')\r\n    .positive('Must be a positive number')\r\n    .integer('Must be an integer')\r\n    .min(0, 'Value must be greater than or equal to 0')\r\n    .max(100, 'Value must be less than or equal to 100'),\r\n  weight: Yup.number()\r\n    .typeError('Must be a number')\r\n    .required('Field is required')\r\n    .positive('Must be a positive number')\r\n    .integer('Must be an integer')\r\n    .min(0, 'Value must be greater than or equal to 0')\r\n    .max(100, 'Value must be less than or equal to 100'),\r\n  width: Yup.number()\r\n    .typeError('Must be a number')\r\n    .required('Field is required')\r\n    .positive('Must be a positive number')\r\n    .integer('Must be an integer')\r\n    .min(0, 'Value must be greater than or equal to 0')\r\n    .max(100, 'Value must be less than or equal to 100'),\r\n  height: Yup.number()\r\n    .typeError('Must be a number')\r\n    .required('Field is required')\r\n    .positive('Must be a positive number')\r\n    .integer('Must be an integer')\r\n    .min(0, 'Value must be greater than or equal to 0')\r\n    .max(100, 'Value must be less than or equal to 100'),\r\n  name: Yup.string().required('Field is required'),\r\n});\r\n","import styled from '@emotion/styled';\r\n\r\nimport { Field } from 'formik';\r\n\r\nexport const InputItem = styled.li`\r\n  margin-bottom: 20px;\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const UserInputBtn = styled.button`\r\n  display: block;\r\n  padding: ${({ theme }) => theme.space[3] + 'px'}\r\n    ${({ theme }) => theme.space[4] + 'px'};\r\n\r\n  border-radius: ${({ theme }) => theme.space[2] + 'px'};\r\n  font-size: ${({ theme }) => theme.fontSizes[3] + 'px'};\r\n  color: ${({ theme }) => theme.colors.maimWhite};\r\n\r\n  background-color: ${({ theme }) => theme.colors.blue};\r\n\r\n  transition: background 0.5s ease-in-out;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.hoverBlue};\r\n  }\r\n`;\r\n\r\nexport const UploadFile = styled(Field)`\r\n  margin-top: 40px;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nimport { Field } from 'formik';\r\n\r\nexport const UserInputWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const UserInputTitle = styled.h3`\r\n  font-size: 14px;\r\n  line-height: 1.3;\r\n  font-weight: 600;\r\n  letter-spacing: 0.04em;\r\n  color: ${({ theme, error }) =>\r\n    error ? theme.colors.red : theme.colors.grey};\r\n`;\r\n\r\nexport const UserInput = styled(Field)`\r\n  font-size: 18px;\r\n  line-height: 1.3;\r\n  letter-spacing: 0.04em;\r\n  padding: 6px 12px;\r\n  margin-top: 6px;\r\n  border: 1px solid\r\n    ${({ theme, errors }) => (errors ? theme.colors.red : theme.colors.blue)};\r\n  outline: none;\r\n  &:focus {\r\n    outline: 2px solid\r\n      ${({ theme, errors }) => (errors ? theme.colors.red : theme.colors.blue)};\r\n  }\r\n  border-radius: 4px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const UserInputValidateMsg = styled.div`\r\n  color: #ff0000;\r\n`;\r\n\r\nexport const ErrorMsg = styled.b`\r\n  color: ${({ theme }) => theme.colors.red};\r\n  position: absolute;\r\n  bottom: -20px;\r\n  left: 10px;\r\n`;\r\n","import {\r\n  UserInputWrapper,\r\n  UserInputTitle,\r\n  UserInput,\r\n  ErrorMsg,\r\n} from './FormInput.styled';\r\n\r\nexport const Input = ({ errors, title, name, type }) => {\r\n  return (\r\n    <>\r\n      <UserInputTitle>{title}</UserInputTitle>\r\n      <UserInputWrapper>\r\n        <UserInput\r\n          name={name}\r\n          type={type}\r\n          placeholder={name}\r\n          onBlur={(e) => {\r\n            //   let formattedValue = formatNumber(e.target.value);\r\n            //   setValue(formattedValue);\r\n          }}\r\n          errors={errors[name]}\r\n        />\r\n        {errors[name] && <ErrorMsg>{errors[name]}</ErrorMsg>}\r\n      </UserInputWrapper>\r\n    </>\r\n  );\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { createProduct } from '../../redux/Products/ProductsOperation';\r\nimport { Formik, Form } from 'formik';\r\n\r\nimport { Button } from '../ConfirmationButton/ConfirmationButton';\r\n\r\nimport { ValidateSchema, createProductInitialValue } from './CreateProductData';\r\n\r\nimport {\r\n  UserInputBtn,\r\n  InputItem,\r\n  UploadFile,\r\n} from './CreatePfoductForm.styled';\r\nimport { ButtonWrapper } from '../ConfirmDeletProduct/ConfirmDeleteProduct.styled';\r\nimport { Input } from '../FormInput/FormInput';\r\n\r\nexport const CreateProductFrom = ({ closeModal }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (values, { validateForm }) => {\r\n    const validationErrors = await validateForm(values);\r\n\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      dispatch(createProduct({ ...values }));\r\n      closeModal();\r\n    } else {\r\n      console.log('Форма содержит ошибки', validationErrors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n        count: '',\r\n        weight: '',\r\n        width: '',\r\n        height: '',\r\n      }}\r\n      validationSchema={ValidateSchema}\r\n      validateOnChange={false}\r\n      enableReinitialize={true}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {({ errors, touched, resetForm }) => (\r\n        <Form>\r\n          <ul>\r\n            {createProductInitialValue.map(({ title, name, type }) => (\r\n              <InputItem key={name}>\r\n                <Input errors={errors} title={title} name={name} type={type} />\r\n              </InputItem>\r\n            ))}\r\n          </ul>\r\n          <UploadFile\r\n            type=\"file\"\r\n            id=\"fileInput\"\r\n            name=\"fileInput\"\r\n            onChange={(event) => {\r\n              //   const file = event.currentTarget.files[0];\r\n              //   setFieldValue('fileInput', file);\r\n            }}\r\n          />\r\n          <ButtonWrapper>\r\n            <UserInputBtn type=\"submit\">Submit</UserInputBtn>\r\n            <Button type={'button'} text={'Cancel'} handleClick={closeModal} />\r\n          </ButtonWrapper>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","export function sortData(data) {\r\n  if (data.length === 0) {\r\n    return;\r\n  }\r\n\r\n  const sortedData = [...data].sort((a, b) => {\r\n    const countA = parseInt(a.count, 10);\r\n    const countB = parseInt(b.count, 10);\r\n    return countB - countA;\r\n  });\r\n\r\n  return sortedData;\r\n}\r\n\r\nconst filtredData = {\r\n  sortData,\r\n};\r\n\r\nexport default filtredData;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CreateBtn = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n  padding: ${({ theme }) => theme.space[3] + 'px'}\r\n    ${({ theme }) => theme.space[4] + 'px'};\r\n  border-radius: ${({ theme }) => theme.space[2] + 'px'};\r\n\r\n  color: ${({ theme }) => theme.colors.maimWhite};\r\n  font-size: ${({ theme }) => theme.fontSizes[5] + 'px'};\r\n\r\n  background-color: ${({ theme }) => theme.colors.blue};\r\n\r\n  transition: background 0.5s ease-in-out;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.hoverBlue};\r\n  }\r\n`;\r\n","import { CreateBtn } from './CreateBtn.styled';\r\n\r\nexport const CreateButton = ({ handleClick }) => {\r\n  return (\r\n    <CreateBtn type=\"buttom\" onClick={handleClick}>\r\n      Create Product\r\n    </CreateBtn>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  padding-top: 40px;\r\n  width: 1241px;\r\n  margin: 0 auto;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { data } from '../../redux/Products/ProductSelectors';\r\nimport { getAllProducts } from '../../redux/Products/ProductsOperation';\r\n\r\nimport { ProductList } from '../../Components/ProductList/ProductsList';\r\nimport { CreateProductFrom } from '../../Components/CreateProductForm/CreateProductFoem';\r\nimport PopupWindow from '../../Components/Modal/Modal';\r\n\r\nimport filtredData from '../../helpers/filtrData';\r\nimport { CreateButton } from '../../Components/CreatProdutBtn/CreateProductBtn';\r\n\r\nimport { Container } from './ListPage.styled';\r\n\r\nconst ProductsList = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const productsData = useSelector(data);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProducts());\r\n  }, [dispatch]);\r\n\r\n  const handleOpenMpdal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const filtredProductData = filtredData.sortData(productsData);\r\n\r\n  return (\r\n    <Container>\r\n      <CreateButton handleClick={handleOpenMpdal} />\r\n      {productsData.length > 0 && <ProductList data={filtredProductData} />}\r\n      {isModalOpen && (\r\n        <PopupWindow\r\n          closeModal={closeModal}\r\n          title={'Delete Item'}\r\n          isModalOpen={isModalOpen}\r\n        >\r\n          <CreateProductFrom closeModal={closeModal} />\r\n        </PopupWindow>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductsList;\r\n"],"names":["data","state","products","ListWrapper","styled","ul","_templateObject","_taggedTemplateLiteral","Backdrop","div","ModalWindow","_templateObject2","ModalHeader","_templateObject3","_ref","theme","space","_ref2","colors","grey","ModalTitle","h3","_templateObject4","CloseModalBtn","button","_templateObject5","ModalContent","_templateObject6","modalContainer","document","getElementById","PopupWindow","closeModal","title","children","isModalOpen","nodeRef","useRef","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","_jsx","CSSTransition","in","timeout","classNames","unmountOnExit","onClick","currentTarget","target","ref","_jsxs","FiX","size","style","color","ConfirmationButton","_ref3","_ref4","maimWhite","_ref5","fontSizes","_ref6","blue","_ref7","hoverBlue","Button","type","handleClick","text","ButtonWrapper","ConfirmDelete","id","dispatch","useDispatch","handleDelete","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","deleteProduct","stop","apply","arguments","ItemWrapper","li","ItemtitleWrapper","Itemtitle","black","LearnMoreBtn","p","NavLink","_ref8","_ref9","_ref10","_ref11","_ref12","lightBlue","DltBtn","_templateObject7","_ref13","_ref14","red","Product","_useState","useState","_useState2","_slicedToArray","setIsModalOpen","location","useLocation","FiTrash2","src","imageUrl","alt","name","count","to","concat","from","ProductList","console","log","map","dataItem","Math","random","toString","createProductInitialValue","ValidateSchema","Yup","shape","typeError","required","positive","integer","min","max","weight","width","height","InputItem","UserInputBtn","UploadFile","Field","UserInputWrapper","UserInputTitle","error","UserInput","errors","ErrorMsg","b","Input","_Fragment","placeholder","onBlur","CreateProductFrom","handleSubmit","values","validateForm","validationErrors","sent","Object","keys","length","createProduct","_objectSpread","_x","_x2","Formik","initialValues","validationSchema","validateOnChange","enableReinitialize","onSubmit","touched","resetForm","Form","onChange","event","filtredData","sortData","_toConsumableArray","sort","a","countA","parseInt","CreateBtn","CreateButton","Container","productsData","useSelector","getAllProducts","filtredProductData"],"sourceRoot":""}